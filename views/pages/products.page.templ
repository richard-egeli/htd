package pages

import "net/http"
import "github.com/richard-egeli/htd/views/layout"
import "github.com/richard-egeli/htd/views/icons"
import "github.com/richard-egeli/htd/pkg/store"
import "fmt"

type ProductsData struct {
	SidebarData *layout.SidebarData
}

templ Product(product *store.Product) {
	<tr class="border-t border-gray-300 text-gray-600">
		<td>{ product.Name }</td>
		<td>{ product.Brand }</td>
		<td>
			<img src="/static/small.webp" alt="Product Preview" class="h-36 py-4"/>
		</td>
		<td>{ fmt.Sprintf("%.02f", product.Price) }kr</td>
		<td>{ product.SKU }</td>
		<td>Available</td>
		<td>
			<button aria-label="Product Edit Button" class="p-4 hover:text-indigo-600">
				@icons.PencilSquareIcon()
			</button>
		</td>
	</tr>
}

func FetchProducts() []store.Product {
	var handler store.Product
	var products []store.Product

	p, _ := handler.FetchAll()

	return append(products, p...)
}

templ ProductsPage(w http.ResponseWriter, r* http.Request, data *ProductsData) {
	@layout.SidebarLayout(w, r, data.SidebarData) {
		<div class="w-full h-full p-8 shadow-md bg-white border-gray-300 border rounded-md">
			<button class="px-4 py-2 mb-6 bg-indigo-600 text-white rounded-md hover:bg-blue-500" hx-get="/dashboard/products/create" hx-target="#product-creation-page">
				New Product
			</button>
			<div class="relative" id="product-creation-page"></div>
			<table class="w-full text-left">
				<thead>
					<tr>
						<th>Name</th>
						<th>Brand</th>
						<th>Preview</th>
						<th>Price</th>
						<th>SKU</th>
						<th>Availability</th>
						<th>Edit</th>
					</tr>
				</thead>
				<tbody>
					for _, product := range FetchProducts() {
						@Product(&product)
					}
				</tbody>
			</table>
		</div>
	}
}
